{"ast":null,"code":"var _jsxFileName = \"/Users/edbentto/PAINEL-OBS/src/context/GameStateContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect, useCallback } from 'react';\nimport { gameStateAPI } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameStateContext = /*#__PURE__*/createContext();\nconst initialState = {\n  homeTeam: {\n    logo: null,\n    name: \"HOME\",\n    score: 0,\n    redCards: 0\n  },\n  awayTeam: {\n    logo: null,\n    name: \"AWAY\",\n    score: 0,\n    redCards: 0\n  },\n  timer: {\n    minutes: 0,\n    seconds: 0,\n    isRunning: false\n  },\n  period: \"1T\",\n  extraTime: 0\n};\nfunction gameStateReducer(state, action) {\n  switch (action.type) {\n    case 'SET_HOME_TEAM':\n      return {\n        ...state,\n        homeTeam: {\n          ...state.homeTeam,\n          ...action.payload\n        }\n      };\n    case 'SET_AWAY_TEAM':\n      return {\n        ...state,\n        awayTeam: {\n          ...state.awayTeam,\n          ...action.payload\n        }\n      };\n    case 'SET_TIMER':\n      return {\n        ...state,\n        timer: {\n          ...state.timer,\n          ...action.payload\n        }\n      };\n    case 'INCREMENT_TIMER':\n      const newSeconds = state.timer.seconds + 1;\n      const newMinutes = newSeconds >= 60 ? state.timer.minutes + 1 : state.timer.minutes;\n      return {\n        ...state,\n        timer: {\n          ...state.timer,\n          minutes: newMinutes > 99 ? 99 : newMinutes,\n          seconds: newSeconds >= 60 ? 0 : newSeconds\n        }\n      };\n    case 'SET_PERIOD':\n      return {\n        ...state,\n        period: action.payload\n      };\n    case 'SET_EXTRA_TIME':\n      return {\n        ...state,\n        extraTime: action.payload\n      };\n    case 'LOAD_STATE':\n      return action.payload;\n    case 'RESET_GAME':\n      return initialState;\n    default:\n      return state;\n  }\n}\nexport function GameStateProvider({\n  children\n}) {\n  _s();\n  const [state, dispatch] = useReducer(gameStateReducer, initialState);\n  const [isLoading, setIsLoading] = React.useState(true);\n  const [lastUpdated, setLastUpdated] = React.useState(null);\n\n  // Função para carregar estado da API\n  const loadStateFromAPI = useCallback(async () => {\n    try {\n      const apiState = await gameStateAPI.getGameState();\n      if (apiState) {\n        // Remove campos específicos da API antes de carregar no estado\n        const {\n          id,\n          lastUpdated: apiLastUpdated,\n          ...gameData\n        } = apiState;\n        dispatch({\n          type: 'LOAD_STATE',\n          payload: gameData\n        });\n        setLastUpdated(apiLastUpdated);\n      }\n    } catch (error) {\n      console.error('Erro ao carregar estado da API:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  // Função para salvar estado na API\n  const saveStateToAPI = useCallback(async currentState => {\n    try {\n      await gameStateAPI.updateGameState({\n        id: 1,\n        ...currentState\n      });\n    } catch (error) {\n      console.error('Erro ao salvar estado na API:', error);\n    }\n  }, []);\n\n  // Carregar estado inicial da API\n  useEffect(() => {\n    loadStateFromAPI();\n  }, [loadStateFromAPI]);\n\n  // Salvar estado na API sempre que mudar (exceto no carregamento inicial)\n  useEffect(() => {\n    if (!isLoading) {\n      saveStateToAPI(state);\n    }\n  }, [state, isLoading, saveStateToAPI]);\n\n  // Polling para sincronização automática a cada 2 segundos\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      try {\n        const apiState = await gameStateAPI.getGameState();\n        if (apiState && apiState.lastUpdated !== lastUpdated) {\n          const {\n            id,\n            lastUpdated: apiLastUpdated,\n            ...gameData\n          } = apiState;\n          dispatch({\n            type: 'LOAD_STATE',\n            payload: gameData\n          });\n          setLastUpdated(apiLastUpdated);\n        }\n      } catch (error) {\n        console.error('Erro no polling de sincronização:', error);\n      }\n    }, 2000);\n    return () => clearInterval(interval);\n  }, [lastUpdated]);\n\n  // Timer interval effect\n  useEffect(() => {\n    let interval;\n    if (state.timer.isRunning) {\n      interval = setInterval(() => {\n        dispatch({\n          type: 'INCREMENT_TIMER'\n        });\n      }, 1000);\n    }\n    return () => clearInterval(interval);\n  }, [state.timer.isRunning]);\n\n  // Função para resetar o jogo\n  const resetGame = useCallback(async () => {\n    try {\n      const resetState = await gameStateAPI.resetGameState();\n      const {\n        id,\n        lastUpdated: apiLastUpdated,\n        ...gameData\n      } = resetState;\n      dispatch({\n        type: 'LOAD_STATE',\n        payload: gameData\n      });\n      setLastUpdated(apiLastUpdated);\n    } catch (error) {\n      console.error('Erro ao resetar jogo:', error);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(GameStateContext.Provider, {\n    value: {\n      state,\n      dispatch,\n      isLoading,\n      resetGame,\n      refreshState: loadStateFromAPI\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 5\n  }, this);\n}\n_s(GameStateProvider, \"iZngYT//su1gv9/XjB+yPuqsINE=\");\n_c = GameStateProvider;\nexport function useGameState() {\n  _s2();\n  const context = useContext(GameStateContext);\n  if (!context) {\n    throw new Error('useGameState must be used within a GameStateProvider');\n  }\n  return context;\n}\n_s2(useGameState, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"GameStateProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","useCallback","gameStateAPI","jsxDEV","_jsxDEV","GameStateContext","initialState","homeTeam","logo","name","score","redCards","awayTeam","timer","minutes","seconds","isRunning","period","extraTime","gameStateReducer","state","action","type","payload","newSeconds","newMinutes","GameStateProvider","children","_s","dispatch","isLoading","setIsLoading","useState","lastUpdated","setLastUpdated","loadStateFromAPI","apiState","getGameState","id","apiLastUpdated","gameData","error","console","saveStateToAPI","currentState","updateGameState","interval","setInterval","clearInterval","resetGame","resetState","resetGameState","Provider","value","refreshState","fileName","_jsxFileName","lineNumber","columnNumber","_c","useGameState","_s2","context","Error","$RefreshReg$"],"sources":["/Users/edbentto/PAINEL-OBS/src/context/GameStateContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect, useCallback } from 'react';\nimport { gameStateAPI } from '../services/api';\n\nconst GameStateContext = createContext();\n\nconst initialState = {\n  homeTeam: {\n    logo: null,\n    name: \"HOME\",\n    score: 0,\n    redCards: 0\n  },\n  awayTeam: {\n    logo: null,\n    name: \"AWAY\",\n    score: 0,\n    redCards: 0\n  },\n  timer: {\n    minutes: 0,\n    seconds: 0,\n    isRunning: false\n  },\n  period: \"1T\",\n  extraTime: 0\n};\n\nfunction gameStateReducer(state, action) {\n  switch (action.type) {\n    case 'SET_HOME_TEAM':\n      return {\n        ...state,\n        homeTeam: { ...state.homeTeam, ...action.payload }\n      };\n    case 'SET_AWAY_TEAM':\n      return {\n        ...state,\n        awayTeam: { ...state.awayTeam, ...action.payload }\n      };\n    case 'SET_TIMER':\n      return {\n        ...state,\n        timer: { ...state.timer, ...action.payload }\n      };\n    case 'INCREMENT_TIMER':\n      const newSeconds = state.timer.seconds + 1;\n      const newMinutes = newSeconds >= 60 ? state.timer.minutes + 1 : state.timer.minutes;\n      return {\n        ...state,\n        timer: {\n          ...state.timer,\n          minutes: newMinutes > 99 ? 99 : newMinutes,\n          seconds: newSeconds >= 60 ? 0 : newSeconds\n        }\n      };\n    case 'SET_PERIOD':\n      return {\n        ...state,\n        period: action.payload\n      };\n    case 'SET_EXTRA_TIME':\n      return {\n        ...state,\n        extraTime: action.payload\n      };\n    case 'LOAD_STATE':\n      return action.payload;\n    case 'RESET_GAME':\n      return initialState;\n    default:\n      return state;\n  }\n}\n\nexport function GameStateProvider({ children }) {\n  const [state, dispatch] = useReducer(gameStateReducer, initialState);\n  const [isLoading, setIsLoading] = React.useState(true);\n  const [lastUpdated, setLastUpdated] = React.useState(null);\n\n  // Função para carregar estado da API\n  const loadStateFromAPI = useCallback(async () => {\n    try {\n      const apiState = await gameStateAPI.getGameState();\n      if (apiState) {\n        // Remove campos específicos da API antes de carregar no estado\n        const { id, lastUpdated: apiLastUpdated, ...gameData } = apiState;\n        dispatch({ type: 'LOAD_STATE', payload: gameData });\n        setLastUpdated(apiLastUpdated);\n      }\n    } catch (error) {\n      console.error('Erro ao carregar estado da API:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  // Função para salvar estado na API\n  const saveStateToAPI = useCallback(async (currentState) => {\n    try {\n      await gameStateAPI.updateGameState({\n        id: 1,\n        ...currentState\n      });\n    } catch (error) {\n      console.error('Erro ao salvar estado na API:', error);\n    }\n  }, []);\n\n  // Carregar estado inicial da API\n  useEffect(() => {\n    loadStateFromAPI();\n  }, [loadStateFromAPI]);\n\n  // Salvar estado na API sempre que mudar (exceto no carregamento inicial)\n  useEffect(() => {\n    if (!isLoading) {\n      saveStateToAPI(state);\n    }\n  }, [state, isLoading, saveStateToAPI]);\n\n  // Polling para sincronização automática a cada 2 segundos\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      try {\n        const apiState = await gameStateAPI.getGameState();\n        if (apiState && apiState.lastUpdated !== lastUpdated) {\n          const { id, lastUpdated: apiLastUpdated, ...gameData } = apiState;\n          dispatch({ type: 'LOAD_STATE', payload: gameData });\n          setLastUpdated(apiLastUpdated);\n        }\n      } catch (error) {\n        console.error('Erro no polling de sincronização:', error);\n      }\n    }, 2000);\n\n    return () => clearInterval(interval);\n  }, [lastUpdated]);\n\n  // Timer interval effect\n  useEffect(() => {\n    let interval;\n    if (state.timer.isRunning) {\n      interval = setInterval(() => {\n        dispatch({ type: 'INCREMENT_TIMER' });\n      }, 1000);\n    }\n    return () => clearInterval(interval);\n  }, [state.timer.isRunning]);\n\n  // Função para resetar o jogo\n  const resetGame = useCallback(async () => {\n    try {\n      const resetState = await gameStateAPI.resetGameState();\n      const { id, lastUpdated: apiLastUpdated, ...gameData } = resetState;\n      dispatch({ type: 'LOAD_STATE', payload: gameData });\n      setLastUpdated(apiLastUpdated);\n    } catch (error) {\n      console.error('Erro ao resetar jogo:', error);\n    }\n  }, []);\n\n  return (\n    <GameStateContext.Provider value={{ \n      state, \n      dispatch, \n      isLoading, \n      resetGame,\n      refreshState: loadStateFromAPI \n    }}>\n      {children}\n    </GameStateContext.Provider>\n  );\n}\n\nexport function useGameState() {\n  const context = useContext(GameStateContext);\n  if (!context) {\n    throw new Error('useGameState must be used within a GameStateProvider');\n  }\n  return context;\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}