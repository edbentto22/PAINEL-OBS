{"ast":null,"code":"var _jsxFileName = \"/Users/edbentto/PAINEL-OBS/src/context/GameStateContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect, useCallback } from 'react';\nimport { gameStateAPI } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameStateContext = /*#__PURE__*/createContext();\nconst initialState = {\n  homeTeam: {\n    logo: null,\n    name: \"HOME\",\n    score: 0,\n    redCards: 0\n  },\n  awayTeam: {\n    logo: null,\n    name: \"AWAY\",\n    score: 0,\n    redCards: 0\n  },\n  timer: {\n    minutes: 0,\n    seconds: 0,\n    isRunning: false\n  },\n  period: \"1T\",\n  extraTime: 0,\n  penalties: {\n    active: false,\n    homeScore: 0,\n    awayScore: 0\n  }\n};\nfunction gameStateReducer(state, action) {\n  switch (action.type) {\n    case 'UPDATE_HOME_SCORE':\n      return {\n        ...state,\n        homeTeam: {\n          ...state.homeTeam,\n          score: action.payload\n        }\n      };\n    case 'UPDATE_AWAY_SCORE':\n      return {\n        ...state,\n        awayTeam: {\n          ...state.awayTeam,\n          score: action.payload\n        }\n      };\n    case 'UPDATE_HOME_RED_CARDS':\n      return {\n        ...state,\n        homeTeam: {\n          ...state.homeTeam,\n          redCards: action.payload\n        }\n      };\n    case 'UPDATE_AWAY_RED_CARDS':\n      return {\n        ...state,\n        awayTeam: {\n          ...state.awayTeam,\n          redCards: action.payload\n        }\n      };\n    case 'UPDATE_HOME_NAME':\n      return {\n        ...state,\n        homeTeam: {\n          ...state.homeTeam,\n          name: action.payload\n        }\n      };\n    case 'UPDATE_AWAY_NAME':\n      return {\n        ...state,\n        awayTeam: {\n          ...state.awayTeam,\n          name: action.payload\n        }\n      };\n    case 'UPDATE_HOME_LOGO':\n      return {\n        ...state,\n        homeTeam: {\n          ...state.homeTeam,\n          logo: action.payload\n        }\n      };\n    case 'UPDATE_AWAY_LOGO':\n      return {\n        ...state,\n        awayTeam: {\n          ...state.awayTeam,\n          logo: action.payload\n        }\n      };\n    case 'START_TIMER':\n      return {\n        ...state,\n        timer: {\n          ...state.timer,\n          isRunning: true\n        }\n      };\n    case 'STOP_TIMER':\n      return {\n        ...state,\n        timer: {\n          ...state.timer,\n          isRunning: false\n        }\n      };\n    case 'UPDATE_TIMER':\n      return {\n        ...state,\n        timer: {\n          ...state.timer,\n          ...action.payload\n        }\n      };\n    case 'INCREMENT_TIMER':\n      const newSeconds = state.timer.seconds + 1;\n      const newMinutes = newSeconds >= 60 ? state.timer.minutes + 1 : state.timer.minutes;\n      return {\n        ...state,\n        timer: {\n          ...state.timer,\n          minutes: newMinutes,\n          seconds: newSeconds >= 60 ? 0 : newSeconds\n        }\n      };\n    case 'UPDATE_PERIOD':\n      return {\n        ...state,\n        period: action.payload\n      };\n    case 'UPDATE_EXTRA_TIME':\n      return {\n        ...state,\n        extraTime: action.payload\n      };\n    case 'TOGGLE_PENALTIES':\n      return {\n        ...state,\n        penalties: {\n          ...state.penalties,\n          active: !state.penalties.active\n        }\n      };\n    case 'UPDATE_HOME_PENALTIES':\n      return {\n        ...state,\n        penalties: {\n          ...state.penalties,\n          homeScore: action.payload\n        }\n      };\n    case 'UPDATE_AWAY_PENALTIES':\n      return {\n        ...state,\n        penalties: {\n          ...state.penalties,\n          awayScore: action.payload\n        }\n      };\n    case 'LOAD_STATE':\n      return action.payload;\n    default:\n      return state;\n  }\n}\nexport function GameStateProvider({\n  children\n}) {\n  _s();\n  const [state, dispatch] = useReducer(gameStateReducer, initialState);\n  const [isLoading, setIsLoading] = React.useState(true);\n  const [lastUpdated, setLastUpdated] = React.useState(null);\n  const [lastLocalUpdate, setLastLocalUpdate] = React.useState(null);\n  const [skipNextPoll, setSkipNextPoll] = React.useState(false);\n\n  // Função para carregar estado da API\n  const loadStateFromAPI = useCallback(async () => {\n    try {\n      const apiState = await gameStateAPI.getGameState();\n      if (apiState) {\n        // Remove campos específicos da API antes de carregar no estado\n        const {\n          id,\n          lastUpdated: apiLastUpdated,\n          ...gameData\n        } = apiState;\n        dispatch({\n          type: 'LOAD_STATE',\n          payload: gameData\n        });\n        setLastUpdated(apiLastUpdated);\n      }\n    } catch (error) {\n      console.error('Erro ao carregar estado da API:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  // Função para salvar estado na API\n  const saveStateToAPI = useCallback(async currentState => {\n    try {\n      const response = await gameStateAPI.updateGameState({\n        id: 1,\n        ...currentState\n      });\n      setLastUpdated(response.lastUpdated);\n      setLastLocalUpdate(Date.now());\n      setSkipNextPoll(true);\n    } catch (error) {\n      console.error('Erro ao salvar estado na API:', error);\n    }\n  }, []);\n\n  // Carregar estado inicial da API\n  useEffect(() => {\n    loadStateFromAPI();\n  }, [loadStateFromAPI]);\n\n  // Salvar estado na API sempre que mudar (exceto no carregamento inicial)\n  useEffect(() => {\n    if (!isLoading && state !== initialState) {\n      const timeoutId = setTimeout(() => {\n        saveStateToAPI(state);\n      }, 100); // Debounce de 100ms para evitar múltiplas chamadas\n\n      return () => clearTimeout(timeoutId);\n    }\n  }, [state, isLoading, saveStateToAPI]);\n\n  // Polling para sincronização automática a cada 2 segundos\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      try {\n        // Pula o polling se houve uma atualização local recente (últimos 3 segundos)\n        if (skipNextPoll) {\n          setSkipNextPoll(false);\n          return;\n        }\n        if (lastLocalUpdate && Date.now() - lastLocalUpdate < 3000) {\n          return;\n        }\n        const apiState = await gameStateAPI.getGameState();\n        if (apiState && apiState.lastUpdated !== lastUpdated) {\n          const {\n            id,\n            lastUpdated: apiLastUpdated,\n            ...gameData\n          } = apiState;\n          dispatch({\n            type: 'LOAD_STATE',\n            payload: gameData\n          });\n          setLastUpdated(apiLastUpdated);\n        }\n      } catch (error) {\n        console.error('Erro no polling de sincronização:', error);\n      }\n    }, 2000);\n    return () => clearInterval(interval);\n  }, [lastUpdated, lastLocalUpdate, skipNextPoll]);\n\n  // Timer interval effect\n  useEffect(() => {\n    let interval;\n    if (state.timer.isRunning) {\n      interval = setInterval(() => {\n        dispatch({\n          type: 'INCREMENT_TIMER'\n        });\n      }, 1000);\n    }\n    return () => clearInterval(interval);\n  }, [state.timer.isRunning]);\n\n  // Função para resetar o jogo\n  const resetGame = useCallback(async () => {\n    try {\n      const resetState = await gameStateAPI.resetGameState();\n      const {\n        id,\n        lastUpdated: apiLastUpdated,\n        ...gameData\n      } = resetState;\n      dispatch({\n        type: 'LOAD_STATE',\n        payload: gameData\n      });\n      setLastUpdated(apiLastUpdated);\n    } catch (error) {\n      console.error('Erro ao resetar jogo:', error);\n    }\n  }, []);\n\n  // Dispatcher customizado que marca atualizações locais\n  const customDispatch = useCallback(action => {\n    // Marca que houve uma atualização local para evitar conflitos com polling\n    if (action.type !== 'LOAD_STATE') {\n      setLastLocalUpdate(Date.now());\n      setSkipNextPoll(true);\n    }\n    dispatch(action);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(GameStateContext.Provider, {\n    value: {\n      state,\n      dispatch: customDispatch,\n      isLoading,\n      resetGame,\n      refreshState: loadStateFromAPI\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 250,\n    columnNumber: 5\n  }, this);\n}\n_s(GameStateProvider, \"9G11aV1LjBedbPOpYvBw2YEo8ZI=\");\n_c = GameStateProvider;\nexport function useGameState() {\n  _s2();\n  const context = useContext(GameStateContext);\n  if (!context) {\n    throw new Error('useGameState must be used within a GameStateProvider');\n  }\n  return context;\n}\n_s2(useGameState, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"GameStateProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","useCallback","gameStateAPI","jsxDEV","_jsxDEV","GameStateContext","initialState","homeTeam","logo","name","score","redCards","awayTeam","timer","minutes","seconds","isRunning","period","extraTime","penalties","active","homeScore","awayScore","gameStateReducer","state","action","type","payload","newSeconds","newMinutes","GameStateProvider","children","_s","dispatch","isLoading","setIsLoading","useState","lastUpdated","setLastUpdated","lastLocalUpdate","setLastLocalUpdate","skipNextPoll","setSkipNextPoll","loadStateFromAPI","apiState","getGameState","id","apiLastUpdated","gameData","error","console","saveStateToAPI","currentState","response","updateGameState","Date","now","timeoutId","setTimeout","clearTimeout","interval","setInterval","clearInterval","resetGame","resetState","resetGameState","customDispatch","Provider","value","refreshState","fileName","_jsxFileName","lineNumber","columnNumber","_c","useGameState","_s2","context","Error","$RefreshReg$"],"sources":["/Users/edbentto/PAINEL-OBS/src/context/GameStateContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect, useCallback } from 'react';\nimport { gameStateAPI } from '../services/api';\n\nconst GameStateContext = createContext();\n\nconst initialState = {\n  homeTeam: {\n    logo: null,\n    name: \"HOME\",\n    score: 0,\n    redCards: 0\n  },\n  awayTeam: {\n    logo: null,\n    name: \"AWAY\",\n    score: 0,\n    redCards: 0\n  },\n  timer: {\n    minutes: 0,\n    seconds: 0,\n    isRunning: false\n  },\n  period: \"1T\",\n  extraTime: 0,\n  penalties: {\n    active: false,\n    homeScore: 0,\n    awayScore: 0\n  }\n};\n\nfunction gameStateReducer(state, action) {\n  switch (action.type) {\n    case 'UPDATE_HOME_SCORE':\n      return {\n        ...state,\n        homeTeam: { ...state.homeTeam, score: action.payload }\n      };\n    case 'UPDATE_AWAY_SCORE':\n      return {\n        ...state,\n        awayTeam: { ...state.awayTeam, score: action.payload }\n      };\n    case 'UPDATE_HOME_RED_CARDS':\n      return {\n        ...state,\n        homeTeam: { ...state.homeTeam, redCards: action.payload }\n      };\n    case 'UPDATE_AWAY_RED_CARDS':\n      return {\n        ...state,\n        awayTeam: { ...state.awayTeam, redCards: action.payload }\n      };\n    case 'UPDATE_HOME_NAME':\n      return {\n        ...state,\n        homeTeam: { ...state.homeTeam, name: action.payload }\n      };\n    case 'UPDATE_AWAY_NAME':\n      return {\n        ...state,\n        awayTeam: { ...state.awayTeam, name: action.payload }\n      };\n    case 'UPDATE_HOME_LOGO':\n      return {\n        ...state,\n        homeTeam: { ...state.homeTeam, logo: action.payload }\n      };\n    case 'UPDATE_AWAY_LOGO':\n      return {\n        ...state,\n        awayTeam: { ...state.awayTeam, logo: action.payload }\n      };\n    case 'START_TIMER':\n      return {\n        ...state,\n        timer: { ...state.timer, isRunning: true }\n      };\n    case 'STOP_TIMER':\n      return {\n        ...state,\n        timer: { ...state.timer, isRunning: false }\n      };\n    case 'UPDATE_TIMER':\n      return {\n        ...state,\n        timer: { ...state.timer, ...action.payload }\n      };\n    case 'INCREMENT_TIMER':\n      const newSeconds = state.timer.seconds + 1;\n      const newMinutes = newSeconds >= 60 ? state.timer.minutes + 1 : state.timer.minutes;\n      return {\n        ...state,\n        timer: {\n          ...state.timer,\n          minutes: newMinutes,\n          seconds: newSeconds >= 60 ? 0 : newSeconds\n        }\n      };\n    case 'UPDATE_PERIOD':\n      return {\n        ...state,\n        period: action.payload\n      };\n    case 'UPDATE_EXTRA_TIME':\n      return {\n        ...state,\n        extraTime: action.payload\n      };\n    case 'TOGGLE_PENALTIES':\n      return {\n        ...state,\n        penalties: { ...state.penalties, active: !state.penalties.active }\n      };\n    case 'UPDATE_HOME_PENALTIES':\n      return {\n        ...state,\n        penalties: { ...state.penalties, homeScore: action.payload }\n      };\n    case 'UPDATE_AWAY_PENALTIES':\n      return {\n        ...state,\n        penalties: { ...state.penalties, awayScore: action.payload }\n      };\n    case 'LOAD_STATE':\n      return action.payload;\n    default:\n      return state;\n  }\n}\n\nexport function GameStateProvider({ children }) {\n  const [state, dispatch] = useReducer(gameStateReducer, initialState);\n  const [isLoading, setIsLoading] = React.useState(true);\n  const [lastUpdated, setLastUpdated] = React.useState(null);\n  const [lastLocalUpdate, setLastLocalUpdate] = React.useState(null);\n  const [skipNextPoll, setSkipNextPoll] = React.useState(false);\n\n  // Função para carregar estado da API\n  const loadStateFromAPI = useCallback(async () => {\n    try {\n      const apiState = await gameStateAPI.getGameState();\n      if (apiState) {\n        // Remove campos específicos da API antes de carregar no estado\n        const { id, lastUpdated: apiLastUpdated, ...gameData } = apiState;\n        dispatch({ type: 'LOAD_STATE', payload: gameData });\n        setLastUpdated(apiLastUpdated);\n      }\n    } catch (error) {\n      console.error('Erro ao carregar estado da API:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  // Função para salvar estado na API\n  const saveStateToAPI = useCallback(async (currentState) => {\n    try {\n      const response = await gameStateAPI.updateGameState({\n        id: 1,\n        ...currentState\n      });\n      setLastUpdated(response.lastUpdated);\n      setLastLocalUpdate(Date.now());\n      setSkipNextPoll(true);\n    } catch (error) {\n      console.error('Erro ao salvar estado na API:', error);\n    }\n  }, []);\n\n  // Carregar estado inicial da API\n  useEffect(() => {\n    loadStateFromAPI();\n  }, [loadStateFromAPI]);\n\n  // Salvar estado na API sempre que mudar (exceto no carregamento inicial)\n  useEffect(() => {\n    if (!isLoading && state !== initialState) {\n      const timeoutId = setTimeout(() => {\n        saveStateToAPI(state);\n      }, 100); // Debounce de 100ms para evitar múltiplas chamadas\n      \n      return () => clearTimeout(timeoutId);\n    }\n  }, [state, isLoading, saveStateToAPI]);\n\n  // Polling para sincronização automática a cada 2 segundos\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      try {\n        // Pula o polling se houve uma atualização local recente (últimos 3 segundos)\n        if (skipNextPoll) {\n          setSkipNextPoll(false);\n          return;\n        }\n        \n        if (lastLocalUpdate && Date.now() - lastLocalUpdate < 3000) {\n          return;\n        }\n        \n        const apiState = await gameStateAPI.getGameState();\n        if (apiState && apiState.lastUpdated !== lastUpdated) {\n          const { id, lastUpdated: apiLastUpdated, ...gameData } = apiState;\n          dispatch({ type: 'LOAD_STATE', payload: gameData });\n          setLastUpdated(apiLastUpdated);\n        }\n      } catch (error) {\n        console.error('Erro no polling de sincronização:', error);\n      }\n    }, 2000);\n\n    return () => clearInterval(interval);\n  }, [lastUpdated, lastLocalUpdate, skipNextPoll]);\n\n  // Timer interval effect\n  useEffect(() => {\n    let interval;\n    if (state.timer.isRunning) {\n      interval = setInterval(() => {\n        dispatch({ type: 'INCREMENT_TIMER' });\n      }, 1000);\n    }\n    return () => clearInterval(interval);\n  }, [state.timer.isRunning]);\n\n  // Função para resetar o jogo\n  const resetGame = useCallback(async () => {\n    try {\n      const resetState = await gameStateAPI.resetGameState();\n      const { id, lastUpdated: apiLastUpdated, ...gameData } = resetState;\n      dispatch({ type: 'LOAD_STATE', payload: gameData });\n      setLastUpdated(apiLastUpdated);\n    } catch (error) {\n      console.error('Erro ao resetar jogo:', error);\n    }\n  }, []);\n\n  // Dispatcher customizado que marca atualizações locais\n  const customDispatch = useCallback((action) => {\n    // Marca que houve uma atualização local para evitar conflitos com polling\n    if (action.type !== 'LOAD_STATE') {\n      setLastLocalUpdate(Date.now());\n      setSkipNextPoll(true);\n    }\n    dispatch(action);\n  }, []);\n\n  return (\n    <GameStateContext.Provider value={{ \n      state, \n      dispatch: customDispatch, \n      isLoading, \n      resetGame,\n      refreshState: loadStateFromAPI \n    }}>\n      {children}\n    </GameStateContext.Provider>\n  );\n}\n\nexport function useGameState() {\n  const context = useContext(GameStateContext);\n  if (!context) {\n    throw new Error('useGameState must be used within a GameStateProvider');\n  }\n  return context;\n}"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,UAAU,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAC5F,SAASC,YAAY,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,gBAAgB,gBAAGR,aAAa,CAAC,CAAC;AAExC,MAAMS,YAAY,GAAG;EACnBC,QAAQ,EAAE;IACRC,IAAI,EAAE,IAAI;IACVC,IAAI,EAAE,MAAM;IACZC,KAAK,EAAE,CAAC;IACRC,QAAQ,EAAE;EACZ,CAAC;EACDC,QAAQ,EAAE;IACRJ,IAAI,EAAE,IAAI;IACVC,IAAI,EAAE,MAAM;IACZC,KAAK,EAAE,CAAC;IACRC,QAAQ,EAAE;EACZ,CAAC;EACDE,KAAK,EAAE;IACLC,OAAO,EAAE,CAAC;IACVC,OAAO,EAAE,CAAC;IACVC,SAAS,EAAE;EACb,CAAC;EACDC,MAAM,EAAE,IAAI;EACZC,SAAS,EAAE,CAAC;EACZC,SAAS,EAAE;IACTC,MAAM,EAAE,KAAK;IACbC,SAAS,EAAE,CAAC;IACZC,SAAS,EAAE;EACb;AACF,CAAC;AAED,SAASC,gBAAgBA,CAACC,KAAK,EAAEC,MAAM,EAAE;EACvC,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,mBAAmB;MACtB,OAAO;QACL,GAAGF,KAAK;QACRjB,QAAQ,EAAE;UAAE,GAAGiB,KAAK,CAACjB,QAAQ;UAAEG,KAAK,EAAEe,MAAM,CAACE;QAAQ;MACvD,CAAC;IACH,KAAK,mBAAmB;MACtB,OAAO;QACL,GAAGH,KAAK;QACRZ,QAAQ,EAAE;UAAE,GAAGY,KAAK,CAACZ,QAAQ;UAAEF,KAAK,EAAEe,MAAM,CAACE;QAAQ;MACvD,CAAC;IACH,KAAK,uBAAuB;MAC1B,OAAO;QACL,GAAGH,KAAK;QACRjB,QAAQ,EAAE;UAAE,GAAGiB,KAAK,CAACjB,QAAQ;UAAEI,QAAQ,EAAEc,MAAM,CAACE;QAAQ;MAC1D,CAAC;IACH,KAAK,uBAAuB;MAC1B,OAAO;QACL,GAAGH,KAAK;QACRZ,QAAQ,EAAE;UAAE,GAAGY,KAAK,CAACZ,QAAQ;UAAED,QAAQ,EAAEc,MAAM,CAACE;QAAQ;MAC1D,CAAC;IACH,KAAK,kBAAkB;MACrB,OAAO;QACL,GAAGH,KAAK;QACRjB,QAAQ,EAAE;UAAE,GAAGiB,KAAK,CAACjB,QAAQ;UAAEE,IAAI,EAAEgB,MAAM,CAACE;QAAQ;MACtD,CAAC;IACH,KAAK,kBAAkB;MACrB,OAAO;QACL,GAAGH,KAAK;QACRZ,QAAQ,EAAE;UAAE,GAAGY,KAAK,CAACZ,QAAQ;UAAEH,IAAI,EAAEgB,MAAM,CAACE;QAAQ;MACtD,CAAC;IACH,KAAK,kBAAkB;MACrB,OAAO;QACL,GAAGH,KAAK;QACRjB,QAAQ,EAAE;UAAE,GAAGiB,KAAK,CAACjB,QAAQ;UAAEC,IAAI,EAAEiB,MAAM,CAACE;QAAQ;MACtD,CAAC;IACH,KAAK,kBAAkB;MACrB,OAAO;QACL,GAAGH,KAAK;QACRZ,QAAQ,EAAE;UAAE,GAAGY,KAAK,CAACZ,QAAQ;UAAEJ,IAAI,EAAEiB,MAAM,CAACE;QAAQ;MACtD,CAAC;IACH,KAAK,aAAa;MAChB,OAAO;QACL,GAAGH,KAAK;QACRX,KAAK,EAAE;UAAE,GAAGW,KAAK,CAACX,KAAK;UAAEG,SAAS,EAAE;QAAK;MAC3C,CAAC;IACH,KAAK,YAAY;MACf,OAAO;QACL,GAAGQ,KAAK;QACRX,KAAK,EAAE;UAAE,GAAGW,KAAK,CAACX,KAAK;UAAEG,SAAS,EAAE;QAAM;MAC5C,CAAC;IACH,KAAK,cAAc;MACjB,OAAO;QACL,GAAGQ,KAAK;QACRX,KAAK,EAAE;UAAE,GAAGW,KAAK,CAACX,KAAK;UAAE,GAAGY,MAAM,CAACE;QAAQ;MAC7C,CAAC;IACH,KAAK,iBAAiB;MACpB,MAAMC,UAAU,GAAGJ,KAAK,CAACX,KAAK,CAACE,OAAO,GAAG,CAAC;MAC1C,MAAMc,UAAU,GAAGD,UAAU,IAAI,EAAE,GAAGJ,KAAK,CAACX,KAAK,CAACC,OAAO,GAAG,CAAC,GAAGU,KAAK,CAACX,KAAK,CAACC,OAAO;MACnF,OAAO;QACL,GAAGU,KAAK;QACRX,KAAK,EAAE;UACL,GAAGW,KAAK,CAACX,KAAK;UACdC,OAAO,EAAEe,UAAU;UACnBd,OAAO,EAAEa,UAAU,IAAI,EAAE,GAAG,CAAC,GAAGA;QAClC;MACF,CAAC;IACH,KAAK,eAAe;MAClB,OAAO;QACL,GAAGJ,KAAK;QACRP,MAAM,EAAEQ,MAAM,CAACE;MACjB,CAAC;IACH,KAAK,mBAAmB;MACtB,OAAO;QACL,GAAGH,KAAK;QACRN,SAAS,EAAEO,MAAM,CAACE;MACpB,CAAC;IACH,KAAK,kBAAkB;MACrB,OAAO;QACL,GAAGH,KAAK;QACRL,SAAS,EAAE;UAAE,GAAGK,KAAK,CAACL,SAAS;UAAEC,MAAM,EAAE,CAACI,KAAK,CAACL,SAAS,CAACC;QAAO;MACnE,CAAC;IACH,KAAK,uBAAuB;MAC1B,OAAO;QACL,GAAGI,KAAK;QACRL,SAAS,EAAE;UAAE,GAAGK,KAAK,CAACL,SAAS;UAAEE,SAAS,EAAEI,MAAM,CAACE;QAAQ;MAC7D,CAAC;IACH,KAAK,uBAAuB;MAC1B,OAAO;QACL,GAAGH,KAAK;QACRL,SAAS,EAAE;UAAE,GAAGK,KAAK,CAACL,SAAS;UAAEG,SAAS,EAAEG,MAAM,CAACE;QAAQ;MAC7D,CAAC;IACH,KAAK,YAAY;MACf,OAAOF,MAAM,CAACE,OAAO;IACvB;MACE,OAAOH,KAAK;EAChB;AACF;AAEA,OAAO,SAASM,iBAAiBA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAC9C,MAAM,CAACR,KAAK,EAAES,QAAQ,CAAC,GAAGlC,UAAU,CAACwB,gBAAgB,EAAEjB,YAAY,CAAC;EACpE,MAAM,CAAC4B,SAAS,EAAEC,YAAY,CAAC,GAAGvC,KAAK,CAACwC,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAG1C,KAAK,CAACwC,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACG,eAAe,EAAEC,kBAAkB,CAAC,GAAG5C,KAAK,CAACwC,QAAQ,CAAC,IAAI,CAAC;EAClE,MAAM,CAACK,YAAY,EAAEC,eAAe,CAAC,GAAG9C,KAAK,CAACwC,QAAQ,CAAC,KAAK,CAAC;;EAE7D;EACA,MAAMO,gBAAgB,GAAG1C,WAAW,CAAC,YAAY;IAC/C,IAAI;MACF,MAAM2C,QAAQ,GAAG,MAAM1C,YAAY,CAAC2C,YAAY,CAAC,CAAC;MAClD,IAAID,QAAQ,EAAE;QACZ;QACA,MAAM;UAAEE,EAAE;UAAET,WAAW,EAAEU,cAAc;UAAE,GAAGC;QAAS,CAAC,GAAGJ,QAAQ;QACjEX,QAAQ,CAAC;UAAEP,IAAI,EAAE,YAAY;UAAEC,OAAO,EAAEqB;QAAS,CAAC,CAAC;QACnDV,cAAc,CAACS,cAAc,CAAC;MAChC;IACF,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IACzD,CAAC,SAAS;MACRd,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMgB,cAAc,GAAGlD,WAAW,CAAC,MAAOmD,YAAY,IAAK;IACzD,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMnD,YAAY,CAACoD,eAAe,CAAC;QAClDR,EAAE,EAAE,CAAC;QACL,GAAGM;MACL,CAAC,CAAC;MACFd,cAAc,CAACe,QAAQ,CAAChB,WAAW,CAAC;MACpCG,kBAAkB,CAACe,IAAI,CAACC,GAAG,CAAC,CAAC,CAAC;MAC9Bd,eAAe,CAAC,IAAI,CAAC;IACvB,CAAC,CAAC,OAAOO,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACvD;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAjD,SAAS,CAAC,MAAM;IACd2C,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,CAACA,gBAAgB,CAAC,CAAC;;EAEtB;EACA3C,SAAS,CAAC,MAAM;IACd,IAAI,CAACkC,SAAS,IAAIV,KAAK,KAAKlB,YAAY,EAAE;MACxC,MAAMmD,SAAS,GAAGC,UAAU,CAAC,MAAM;QACjCP,cAAc,CAAC3B,KAAK,CAAC;MACvB,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;;MAET,OAAO,MAAMmC,YAAY,CAACF,SAAS,CAAC;IACtC;EACF,CAAC,EAAE,CAACjC,KAAK,EAAEU,SAAS,EAAEiB,cAAc,CAAC,CAAC;;EAEtC;EACAnD,SAAS,CAAC,MAAM;IACd,MAAM4D,QAAQ,GAAGC,WAAW,CAAC,YAAY;MACvC,IAAI;QACF;QACA,IAAIpB,YAAY,EAAE;UAChBC,eAAe,CAAC,KAAK,CAAC;UACtB;QACF;QAEA,IAAIH,eAAe,IAAIgB,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGjB,eAAe,GAAG,IAAI,EAAE;UAC1D;QACF;QAEA,MAAMK,QAAQ,GAAG,MAAM1C,YAAY,CAAC2C,YAAY,CAAC,CAAC;QAClD,IAAID,QAAQ,IAAIA,QAAQ,CAACP,WAAW,KAAKA,WAAW,EAAE;UACpD,MAAM;YAAES,EAAE;YAAET,WAAW,EAAEU,cAAc;YAAE,GAAGC;UAAS,CAAC,GAAGJ,QAAQ;UACjEX,QAAQ,CAAC;YAAEP,IAAI,EAAE,YAAY;YAAEC,OAAO,EAAEqB;UAAS,CAAC,CAAC;UACnDV,cAAc,CAACS,cAAc,CAAC;QAChC;MACF,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;MAC3D;IACF,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAMa,aAAa,CAACF,QAAQ,CAAC;EACtC,CAAC,EAAE,CAACvB,WAAW,EAAEE,eAAe,EAAEE,YAAY,CAAC,CAAC;;EAEhD;EACAzC,SAAS,CAAC,MAAM;IACd,IAAI4D,QAAQ;IACZ,IAAIpC,KAAK,CAACX,KAAK,CAACG,SAAS,EAAE;MACzB4C,QAAQ,GAAGC,WAAW,CAAC,MAAM;QAC3B5B,QAAQ,CAAC;UAAEP,IAAI,EAAE;QAAkB,CAAC,CAAC;MACvC,CAAC,EAAE,IAAI,CAAC;IACV;IACA,OAAO,MAAMoC,aAAa,CAACF,QAAQ,CAAC;EACtC,CAAC,EAAE,CAACpC,KAAK,CAACX,KAAK,CAACG,SAAS,CAAC,CAAC;;EAE3B;EACA,MAAM+C,SAAS,GAAG9D,WAAW,CAAC,YAAY;IACxC,IAAI;MACF,MAAM+D,UAAU,GAAG,MAAM9D,YAAY,CAAC+D,cAAc,CAAC,CAAC;MACtD,MAAM;QAAEnB,EAAE;QAAET,WAAW,EAAEU,cAAc;QAAE,GAAGC;MAAS,CAAC,GAAGgB,UAAU;MACnE/B,QAAQ,CAAC;QAAEP,IAAI,EAAE,YAAY;QAAEC,OAAO,EAAEqB;MAAS,CAAC,CAAC;MACnDV,cAAc,CAACS,cAAc,CAAC;IAChC,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMiB,cAAc,GAAGjE,WAAW,CAAEwB,MAAM,IAAK;IAC7C;IACA,IAAIA,MAAM,CAACC,IAAI,KAAK,YAAY,EAAE;MAChCc,kBAAkB,CAACe,IAAI,CAACC,GAAG,CAAC,CAAC,CAAC;MAC9Bd,eAAe,CAAC,IAAI,CAAC;IACvB;IACAT,QAAQ,CAACR,MAAM,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACErB,OAAA,CAACC,gBAAgB,CAAC8D,QAAQ;IAACC,KAAK,EAAE;MAChC5C,KAAK;MACLS,QAAQ,EAAEiC,cAAc;MACxBhC,SAAS;MACT6B,SAAS;MACTM,YAAY,EAAE1B;IAChB,CAAE;IAAAZ,QAAA,EACCA;EAAQ;IAAAuC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACgB,CAAC;AAEhC;AAACzC,EAAA,CA/HeF,iBAAiB;AAAA4C,EAAA,GAAjB5C,iBAAiB;AAiIjC,OAAO,SAAS6C,YAAYA,CAAA,EAAG;EAAAC,GAAA;EAC7B,MAAMC,OAAO,GAAG/E,UAAU,CAACO,gBAAgB,CAAC;EAC5C,IAAI,CAACwE,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,sDAAsD,CAAC;EACzE;EACA,OAAOD,OAAO;AAChB;AAACD,GAAA,CANeD,YAAY;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}